import { CHANGE_VIEW, SEARCH_VIEW, BOARD_VIEW } from '../actions/view';
import { CHANGE_SEARCH_FILTER } from '../actions/search';
import { UPDATE_CARDS } from '../actions/fetching/cards';
import { UPDATE_LISTS } from '../actions/fetching/lists';
import { UPDATE_BOARDS } from '../actions/fetching/boards';
import { UPDATE_USERS } from '../actions/fetching/users';
import {SELECT_BOARD, DESELECT_BOARD} from '../actions/boardselection';
import { Card, Board, List } from './trello';

export type viewOption = SEARCH_VIEW | BOARD_VIEW;
export type changeViewAction = {
    type: CHANGE_VIEW,
    view: viewOption,
};

export type CardMap = { [key: string]: Card };
export type updateCardsAction = {
    type: UPDATE_CARDS,
    cards: CardMap,
};

export type BoardMap = { [key: string]: Board };
export type updateBoardsAction = {
    type: UPDATE_BOARDS,
    cards: BoardMap,
};

export type ListMap = { [key: string]: List };
export type updateListsAction = {
    type: UPDATE_LISTS,
    lists: ListMap,
};

export type UserMap = { [key: string]: List };
export type updateUsersAction = {
    type: UPDATE_USERS,
    lists: UserMap,
};

export type changeSearchFilterAction = {
    type: CHANGE_SEARCH_FILTER,
    filter: string,
};

export type toggleBoardAction = {
    type: SELECT_BOARD | DESELECT_BOARD,
    boardId: string,
};

export type actionType =
    changeViewAction |
    updateCardsAction |
    updateBoardsAction |
    updateListsAction |
    toggleBoardAction |
    changeSearchFilterAction;

export type dispatchFn = (x: actionType) => void;
export type getStateFn = () => any;
